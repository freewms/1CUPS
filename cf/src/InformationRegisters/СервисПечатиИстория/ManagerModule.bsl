// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс


// Зарегистрировать событие взаимодействия с сервером печати.
// 
// Параметры:
// Метод - ПеречислениеСсылка.МетодыСервераПечати
// Результат - Соответствие из КлючИЗначение:
//	* Ключ - Число - Индекс в массиве принтеров по которому производится идентификация последовательности
//  * Значение - Соответствие из КлючИЗначение - Описание события печати
//	  * Ключ - Строка - Наименование параметра с сервера печати
//	  * Значение - Строка, Массив из Строка - Значение параметра с сервера печати
// Принтеры - Массив Из СправочникСсылка.Принтеры - Массив принтеров как он был передан в запросе службе печати
Процедура ЗарегистрироватьСобытие(Метод, Результат, Принтеры) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	ТекущаяДата = ТекущаяДатаСеанса();
	ТекущаяДатаНачалоЧаса = НачалоЧаса(ТекущаяДата);
	Индекс = 0;
	Для Каждого Принтер Из Принтеры Цикл
		
		ЭтоОшибка = Ложь;
		Если Результат[Индекс]["printer-state"] = 0 Тогда
			ЭтоОшибка = Истина;
		КонецЕсли;
		
		Запись = НаборЗаписей.Добавить();
		Запись.Принтер = Принтер;
		Запись.ТипСобытия = Метод;
		Запись.Разделитель = Новый УникальныйИдентификатор();
		Запись.ДатаНачалоЧаса = ТекущаяДатаНачалоЧаса;
					
		Запись.ДатаСобытия = ТекущаяДата;
		Запись.ОписаниеСобытия = СервисПечатиСервер.JSONEncode(Результат[Индекс]);
		Запись.Ошибка = ЭтоОшибка;
		Индекс = Индекс + 1;	
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
			
КонецПроцедуры

Процедура ОчиститьРегистр() Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли
