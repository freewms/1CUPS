// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Обновляет справочник "Принтеры" по данным сервера печати
// 
// Параметры:
//  СерверПечати - СправочникСсылка.СерверыПечати - Сервер печати
Процедура ОбновитьСправочникПринтеры(СерверПечати) Экспорт
	
	ОписаниеПринтеровНаСервереПечати = СервисПечатиСервер.ПолучитьСостояниеПринтера(СерверПечати);
	
	Если ОписаниеПринтеровНаСервереПечати = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеПринтеровВСистемеПечати = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Принтеры.Ссылка КАК Принтер,
	|	Принтеры.ИмяНаСервереПечати КАК ИмяПринтера
	|ИЗ
	|	Справочник.Принтеры КАК Принтеры
	|ГДЕ
	|	Принтеры.СерверПечати = &СерверПечати";
	Запрос.УстановитьПараметр("СерверПечати", СерверПечати);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		Если ОписаниеПринтеровВСистемеПечати[Выборка.ИмяПринтера] <> Неопределено Тогда
			//@skip-check invocation-parameter-type-intersect
			Справочники.Принтеры.ПометитьНаУдаление(Выборка.Принтер);
			Продолжить;
		КонецЕсли;							
		Если ОписаниеПринтеровНаСервереПечати[Выборка.ИмяПринтера] = Неопределено Тогда
			//@skip-check invocation-parameter-type-intersect
			Справочники.Принтеры.ПометитьНаУдаление(Выборка.Принтер);
			Продолжить;		
		КонецЕсли;		
		ОписаниеПринтеровВСистемеПечати.Вставить("Выборка.ИмяПринтера");					
	КонецЦикла;
	
	Для Каждого ЭлементСоответствия Из ОписаниеПринтеровНаСервереПечати Цикл
		Если ОписаниеПринтеровВСистемеПечати[ЭлементСоответствия.Ключ] = Неопределено Тогда
			Справочники.Принтеры.СоздатьНовыйЭлементПоОписанию(СерверПечати, ЭлементСоответствия.Ключ);
			Продолжить;
		КонецЕсли;			
	КонецЦикла
		
КонецПроцедуры
	
// Получить описание подключения сервера печати.
// 
// Параметры:
//  СерверПечати - СправочникСсылка.СерверыПечати
// 
// Возвращаемое значение:
//  Структура - Получить описание подкючения сервера печати:
// * Сервер - Строка -
// * Порт - Число -
// * Пользователь - Строка -
// * Пароль - Строка -
// * ЗащищенноеСоединение - Булево -
// * Таймаут - Число -
// * Прокси - см. ОписаниеИнтернетПрокси 
Функция	ПолучитьОписаниеПодключенияСервераПечати(СерверПечати) Экспорт
	
	ОписаниеСоединения = Новый Структура;
	ОписаниеСоединения.Вставить("Сервер","");
	ОписаниеСоединения.Вставить("Порт",0);
	ОписаниеСоединения.Вставить("Пользователь","");
	ОписаниеСоединения.Вставить("Пароль","");
	ОписаниеСоединения.Вставить("ЗащищенноеСоединение",Ложь);
	ОписаниеСоединения.Вставить("Таймаут",0);
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СерверыПечати.Наименование,
	|	СерверыПечати.Сервер,
	|	СерверыПечати.Порт,
	|	СерверыПечати.ЗащищенноеСоединение,
	|	СерверыПечати.Пользователь,
	|	СерверыПечати.Пароль,
	|	СерверыПечати.Таймаут
	|ИЗ
	|	Справочник.СерверыПечати КАК СерверыПечати
	|ГДЕ
	|	СерверыПечати.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",СерверПечати);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ОписаниеСоединения,Выборка);
	КонецЕсли;
	
	Возврат ОписаниеСоединения;
				
КонецФункции

// Проверка является ли наименование элемента соответствующим шаблону наименования.
// Фактически - проверяет является ли наименование автоматически сформированным.
// 
// Параметры:
//  СерверПечати - СправочникСсылка.СерверыПечати - Сервер печати
// 
// Возвращаемое значение:
//  Булево - Наименование соответствует шаблону
Функция НаименованиеСоответствуетШаблону(СерверПечати) Экспорт
	
	ТекущееНаименование = "";
	ТекущееНаименованиеПоШаблону = "";

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СерверыПечати.Наименование,
	|	СерверыПечати.Порт,
	|	СерверыПечати.Сервер
	|ИЗ
	|	Справочник.СерверыПечати КАК СерверыПечати
	|ГДЕ
	|	СерверыПечати.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СерверПечати);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекущееНаименование = Строка(Выборка.Наименование);
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Порт", Выборка.Порт);
		ДанныеЗаполнения.Вставить("Сервер", Выборка.Сервер);
		ТекущееНаименованиеПоШаблону = ПолучитьНаименованиеПоШаблону(ДанныеЗаполнения);
	КонецЕсли;
			
	Возврат ТекущееНаименование = ТекущееНаименованиеПоШаблону;
	
КонецФункции

// Получить наименование по шаблону.
// 
// Параметры:
//  ДанныеЗаполнения - Структура - Данные заполнения:
//   * Сервер - Строка - Имя сервера
//   * Порт - Число - Номер порта на сервере
// 
// Возвращаемое значение:
//  Строка - Наименование элемента справочника по шаблону
Функция ПолучитьНаименованиеПоШаблону(ДанныеЗаполнения) Экспорт

	Возврат СтрШаблон("%1:%2",ДанныеЗаполнения.Сервер,Формат(ДанныеЗаполнения.Порт,"ЧРГ=; ЧГ=;"));

КонецФункции 

#КонецОбласти

#КонецЕсли
